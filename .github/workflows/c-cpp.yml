name: Android NDK Build with AOSP headers

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Cache Android NDK
      uses: actions/cache@v4
      with:
        path: ndk
        key: ${{ runner.os }}-ndk-r27c

    - name: Download Android NDK
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip -q android-ndk-r27c-linux.zip
        mv android-ndk-r27c ndk

    - name: Cache AOSP headers
      uses: actions/cache@v4
      with:
        path: aosp_headers
        key: ${{ runner.os }}-aosp-headers-r3

    - name: Download AOSP headers
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p aosp_headers
        cd aosp_headers
        git clone --depth=1 https://android.googlesource.com/platform/frameworks/native

    - name: Build with NDK + AOSP headers
      run: |
        export NDK=$PWD/ndk
        export TOOLCHAIN=$NDK/toolchains/llvm/prebuilt/linux-x86_64
        export API=21
        export ARCH=aarch64
        $TOOLCHAIN/bin/${ARCH}-linux-android${API}-clang++ \
          -shared -fPIC overlay.cpp -o liboverlay.so \
          -I$PWD/aosp_headers/native/include \
          -I$PWD/aosp_headers/native/libs/gui/include \
          -I$PWD/aosp_headers/native/include \
          -I$NDK/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: liboverlay
        path: liboverlay.so
